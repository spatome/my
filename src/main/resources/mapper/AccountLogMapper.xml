<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spatome.yj.manager.dao.AccountLogMapper" >
  <resultMap id="BaseResultMap" type="com.spatome.yj.manager.entity.AccountLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="account_no" property="accountNo" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="amount_type" property="amountType" jdbcType="VARCHAR" />
    <result column="before_current_balance" property="beforeCurrentBalance" jdbcType="DECIMAL" />
    <result column="in_out" property="inOut" jdbcType="VARCHAR" />
    <result column="in_out_descs" property="inOutDescs" jdbcType="VARCHAR" />
    <result column="related_account_no" property="relatedAccountNo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_no, amount, amount_type, before_current_balance, in_out, in_out_descs, 
    related_account_no, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from account_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from account_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.spatome.yj.manager.entity.AccountLog" >
    insert into account_log (id, account_no, amount, 
      amount_type, before_current_balance, in_out, 
      in_out_descs, related_account_no, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{accountNo,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{amountType,jdbcType=VARCHAR}, #{beforeCurrentBalance,jdbcType=DECIMAL}, #{inOut,jdbcType=VARCHAR}, 
      #{inOutDescs,jdbcType=VARCHAR}, #{relatedAccountNo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.spatome.yj.manager.entity.AccountLog" >
    insert into account_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountNo != null" >
        account_no,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="amountType != null" >
        amount_type,
      </if>
      <if test="beforeCurrentBalance != null" >
        before_current_balance,
      </if>
      <if test="inOut != null" >
        in_out,
      </if>
      <if test="inOutDescs != null" >
        in_out_descs,
      </if>
      <if test="relatedAccountNo != null" >
        related_account_no,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountNo != null" >
        #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="amountType != null" >
        #{amountType,jdbcType=VARCHAR},
      </if>
      <if test="beforeCurrentBalance != null" >
        #{beforeCurrentBalance,jdbcType=DECIMAL},
      </if>
      <if test="inOut != null" >
        #{inOut,jdbcType=VARCHAR},
      </if>
      <if test="inOutDescs != null" >
        #{inOutDescs,jdbcType=VARCHAR},
      </if>
      <if test="relatedAccountNo != null" >
        #{relatedAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spatome.yj.manager.entity.AccountLog" >
    update account_log
    <set >
      <if test="accountNo != null" >
        account_no = #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="amountType != null" >
        amount_type = #{amountType,jdbcType=VARCHAR},
      </if>
      <if test="beforeCurrentBalance != null" >
        before_current_balance = #{beforeCurrentBalance,jdbcType=DECIMAL},
      </if>
      <if test="inOut != null" >
        in_out = #{inOut,jdbcType=VARCHAR},
      </if>
      <if test="inOutDescs != null" >
        in_out_descs = #{inOutDescs,jdbcType=VARCHAR},
      </if>
      <if test="relatedAccountNo != null" >
        related_account_no = #{relatedAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spatome.yj.manager.entity.AccountLog" >
    update account_log
    set account_no = #{accountNo,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      amount_type = #{amountType,jdbcType=VARCHAR},
      before_current_balance = #{beforeCurrentBalance,jdbcType=DECIMAL},
      in_out = #{inOut,jdbcType=VARCHAR},
      in_out_descs = #{inOutDescs,jdbcType=VARCHAR},
      related_account_no = #{relatedAccountNo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>